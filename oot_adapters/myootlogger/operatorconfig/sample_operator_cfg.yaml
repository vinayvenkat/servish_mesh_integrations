# handler for adapter mygrpcadapter
apiVersion: "config.istio.io/v1alpha2"
kind: handler
metadata:
 name: h1
 namespace: istio-system
spec:
 adapter: mygrpclogger 
 connection:
   address: "mygrpclogger:8888" #replaces at runtime by the test
 params:
   file_path: "out.txt"
---
# Configuration for logentry instances
apiVersion: "config.istio.io/v1alpha2"
kind: instance 
metadata:
  name: vvnewlog
  namespace: istio-system
spec:
  template: logentry
  params:
   severity: '"Default"'
   timestamp: request.time
   variables:
    sourceNamespace: source.namespace | ""
    destinationServiceHost: destination.service.host | ""
    protocol: request.scheme | context.protocol | "http"
    method: request.method | ""
    url: request.path | ""
    responseCode: response.code | 0
    latency: response.duration | "0ms"
    httpAuthority: request.headers[":authority"] | request.host | ""
    sourceUser: source.user | ""
    destinationService: destination.service | "service unknown"
    destinationUid: destination.uid | "dest uid unknown"
    requestPath : request.path | "req path unknown"
---
# Rule to send logentry instances to the fluentd handler
apiVersion: "config.istio.io/v1alpha2"
kind: rule
metadata:
  name: r1 
  namespace: istio-system
spec:
  #match: destination.service == "product*" || destination.service == ratings* | destination.service == reviews* | destination.service == details* # match for all requests
  match: destination.service.startsWith("product") || destination.service.startsWith("ratings") || destination.service.startsWith("reviews") || destination.service.startsWith("details") 
  #match: method == "GET" # match for all requests
  actions:
   - handler: h1
     instances:
     - vvnewlog
---
